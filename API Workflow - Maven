name: API Workflow - Maven

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      -main
      -release/**
      -dev/**
      
env:
MAVEN_CLI_OPTS: '-s settings.xml -Dmaven.repo.local=maven.repository -T 1C --batch-mode --errors'
DOCKER_REGISTORY: 'artifacts-scm.dstcorp.net'
DOCKER_REGISTORY_IMAGE: 'ssnchealth/pharmacy/[https://hub.docker.com/r/quadrimuzammil/api123]'
SONAR_PROJECT_KEY: 'SET <groupId>:<artifactId> FOR ARTIFACT'

Jobs:
  build:
   container: 'artifacts-scm.dstcorp.net/docker-repos/maven:3.8.2-openjdk-11-slim'
   runs-on: [ ssc-cloud, shared ]
   
   steps:
   - uses: actions/checkout@v2
   
   - run: 'echo $SETTINGSXML >> settings.xml'
     env:
       SETTINGSXML: ${{secrets.SETTINGS_XML}}
       
   - name: Determine version
     id: determine_version
     run:
       echo 'Determine version'
       if [[ "$GITHUB_REF" == "refs/head/main" ]]
       then 
         reponame='echo $GITHUB_REPOSITORY | cut -d '/' -f 2'
         current_version=$repoName-${GITHUB_SHA::7}
       elif [[ "$GITHUB_REF == refs/heads/release/* ]]
       then
         current_version=`echo "$(echo $GITHUB_REF | cut -d '/' -f 4)-${GITHUB_SHA::7}"`
       else
         current_version=`echo "$(echo $GITHUB_REF | cut -d '/' -f 4)-SNAPSHOT"`
       fi
       echo "version - "$current_version
       echo "::set-output name=version::`echo $current-version`"
     shell: bash
     
     - name: check for snapshot dependencies
       if: github.event_name == 'pull_request' && (github.base_ref == 'main' || startswith(github.base_ref, 'release'
       run: |
         current_version=${{steps.determine_version.outputs.version}}
         if [[ "$current_version" == *-SNAPSHOT ]]
         then
           echo 'Check for snapshot dependencies with dummy version'
           mvn $MAVEN_CLI_OPTS -Drevision=dummy-SNAPSHOT release:prepare -DdevelopmentVersion=dummy-SNAPSHOT -Dargument
         fi
      shell: bash
      
   -name: Initialize CodeQL
    uses: github/codeql-action/init@v1
    if: github.event_name == 'pull_request' || github.ref == 'refs/hesds/main'
    with:
      language: java
      queries: security-extended,security-and-quality
      db-location: '${{ github.workspace }}/codeql_dbs'
      
  - name: Build
    if: github.ref != 'refs/heads/main'
    runs: |
    echo 'Run maven build'
    mvn $MAVEN_CLI_OPTS -Drevision=${{steps.determine_version.outputs.version}} clean verify
    
  - name: Build for main branch
    if: github.ref == 'refs/heads/main'
    run: |
     echo 'Run maven build with sonar'
      mvn $MAVEN_CLI_OPTS -Drevision=${{steps.determine_version.outputs.version}} clean verify sonar:sonar -Dsonar
      
  - name: Perform codeql analysis
    if: github.event_name == 'pull-request' || github.ref == 'refs/heads/main'
    uses: github/codeql-action/analyze@v1
    
  - uses: actions/upload-artifact@v2
    name: upload jar file
    with:
      name: jar
      path: target/*.jar
      
   - uses: actions/upload-artifact@v2
     name: upload sonar report
     if: github.ref == 'refs/heads/main'
     with:
       name: sonarreport
       path: target/sonar/report-task.txt
       
       
  sonar_results:
     container: artifacts-scm.dstcorp.net/docker-repos/pipeline/jq:latest
     needs: build
     runs-on: [ssc-cloud, shared]
     if: github.ref == 'refs/heads/main'
     steps:
     - uses: action/download-artifact@v2
     with:
       name: sonarreport
       
    - name: Sonarqube Results
      uses: DevX/sonar-results-test@master
      with:
         SONAR_API_KEY: ${{901351b9ded12d0259e6aabf41a2db267ef5dfa1}}
         SONAR_PROJECT_KEY: ${{ http://3.110.218.122:9980/quadrimuzammil }}
         
         
  docker_package:
      container: artifacts-scm.dstcorp.net/docker-repos/docker:19.03.1
      runs-on: [ ssc-cloud, shared ]
      if: github.event_name != 'pull-request' && (github.ref == 'refs/heads/main' || startswith(github.ref, 'refs/heads/main')
      needs: build
     steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: jar
              
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
              
           - name: Log in to Artifactory
             uses: docker/login-action@v1
             with:
                 registry: ${{ env.DOCKER_REGISTRY }}
                 username: ${{ quadrimuzammil }}
                 password: ${{ Rahemaan@1 }}
                 
           - name: Build and push Docker images
             uses: docker/build-push-action@v2
             with:
                context: .
                build-args: VCS_REF=${{github.sha}}
                cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/docker-local/${{ env.DOCKER_REGISTRY_IMAGE}}
                tags: ${{ env.DOCKER_REGISTRY }}/docker-local/${{ env.DOCKER_REGISTRY_IMAGE }}:${{github.sha}}
                push: true
                
                
         deploy_dev:
           container: artifacts-scm.dstcorp.net/docker-repos/alpine:latest
           runs-on: [ ssc-cloud, shared ]
           if: github.event_name != 'pull-request' && github.ref == 'refs/heads/main'
           needs: docker_package
           steps:
             - name: Invoke deploy workflow
               uses: benc-uk/workflow-dispatch@vi.1.0
               with:
                 workflow: Deploy Workflow
                 token: ${{ secrets.SECURITY-TOKEN }}
                 inputs: '{"env_name": "dev"}'  
